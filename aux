
bool debug;

void setDebug()
{
	std::string ans;
	std::cout << "\n::- [Activate debug mode]: 1 - yes | 0 - no (default)\n";

	while (true)
	{
		std::cin.clear();
		std::cin.ignore(10000, '\n');
		std::fflush(stdin);

    		std::getline(std::cin, ans);

		if (ans == "1")
		{
			std::cout << "| --- [ Activating debug mode ] --- | \n";
			debug = true;

			break;
		}
		else if (ans == "0")
		{
			std::cout << "| --- [ No debug mode ] --- | \n";
			debug = false;

			break;
		}
		else if (ans == "")
		{
			std::cout << "| --- [ No debug mode ] --- | \n";
			debug = false;

			break;
		}
		else
		{
			std::cout << "Please select an appropiate answer. Press enter to try again.";
		}
	}
}

// Main function
int main()
{
	int length;

	std::cout << "Length of the documents randomly generated documents\n";

	while (true)
	{

		if (!(std::cin >> length))
		{
			std::cout << "Error. Please enter an int number.\n";
			std::cin.clear();
			std::cin.ignore(10000, '\n');

			continue;
		}

		break;

	}

	setDebug(); // setting debug

	genText(length, "transmision1.txt");
	genText(length, "transmision2.txt");
	genPattern(10, "mcode1.txt");
	genPattern(10, "mcode2.txt");
	genPattern(10, "mcode3.txt");
}
